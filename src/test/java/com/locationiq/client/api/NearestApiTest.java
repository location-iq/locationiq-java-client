/*
 * LocationIQ
 * LocationIQ provides flexible enterprise-grade location based solutions. We work with developers, startups and enterprises worldwide serving billions of requests everyday. This page provides an overview of the technical aspects of our API and will help you get started.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.locationiq.client.api;

import LocationIq.ApiException;
import com.locationiq.client.model.DirectionsNearest;
import com.locationiq.client.model.Error;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NearestApi
 */
@Ignore
public class NearestApiTest {

    private final NearestApi api = new NearestApi();

    
    /**
     * Nearest Service
     *
     * Snaps a coordinate to the street network and returns the nearest n matches. Where coordinates only supports a single {longitude},{latitude} entry.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void nearestTest() throws ApiException {
        String coordinates = null;
        String generateHints = null;
        String exclude = null;
        String bearings = null;
        String radiuses = null;
        String approaches = null;
        Integer number = null;
        DirectionsNearest response = api.nearest(coordinates, generateHints, exclude, bearings, radiuses, approaches, number);

        // TODO: test validations
    }
    
}
